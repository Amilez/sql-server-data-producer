<!-- Copyright 2012-2013 Peter Henell

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http:www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.-->

<UserControl x:Class="SQLDataProducer.Views.ExecutionItemOptionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:me="clr-namespace:SQLDataProducer.ViewModels"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:enums="clr-namespace:SQLDataProducer.Entities;assembly=SQLDataProducer.Entities"
             d:DesignHeight="300" d:DesignWidth="600">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="visiConv" />

        <ObjectDataProvider x:Key="executionConditionEnum"
                MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:ExecutionConditions"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>


        <Style TargetType="Button" x:Key="VisibleIfValueFromOtherColumnGenerator">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ParameterName}" Value="Referenced Column" >
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBox" x:Key="NotEnabledIfValueFromOtherColumnGenerator">
            <Setter Property="IsEnabled" Value="True" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ParameterName}" Value="Referenced Column" >
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ContentControl" x:Key="ParameterConfigurationStyle">
            <Setter Property="Content">
                <Setter.Value>
                    <TextBox Text="{Binding Path=Value, Mode=TwoWay}" Visibility="Visible" />
                </Setter.Value>
            </Setter>
            <Setter Property="IsEnabled" Value="True" />

            <Style.Triggers>
                <!--<DataTrigger Binding="{Binding ParameterName}" Value="DATE">
                    <Setter Property="Content">
                        <Setter.Value>
                            <DatePicker DisplayDate="{Binding Value, Mode=TwoWay}" />
                        </Setter.Value>
                    </Setter>
                </DataTrigger>-->
                <DataTrigger Binding="{Binding ParameterName}" Value="Referenced Column" >
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <Grid  IsEnabled="{Binding Model.HaveExecutionItemSelected}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="25*" />
            <ColumnDefinition Width="25*" />
            <ColumnDefinition Width="50*" />
        </Grid.ColumnDefinitions>
        <GroupBox Grid.Row="0" Grid.Column="0">
            <StackPanel>
                <GroupBox Header="Execution Item Description:" FontSize="11" >
                    <TextBox Text="{Binding Model.SelectedExecutionItem.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </GroupBox>
                <GroupBox Header="Number of insertions for this item:" FontSize="11" >
                    <TextBox Text="{Binding Model.SelectedExecutionItem.RepeatCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </GroupBox>
            </StackPanel>

        </GroupBox>

        <GroupBox Header="Conditional Insert?" Grid.Column="1">
            <StackPanel>
                <ComboBox ItemsSource="{Binding Source={StaticResource executionConditionEnum}}"
                            SelectedItem="{Binding Model.SelectedExecutionItem.ExecutionCondition, Mode=TwoWay}" />
                <TextBox Text="{Binding Model.SelectedExecutionItem.ExecutionConditionValue, Mode= TwoWay}" />

                <CheckBox Content="Disable Constraints" IsChecked="{Binding Model.SelectedExecutionItem.DisableConstraints, Mode=TwoWay}" IsEnabled="False" />
                <CheckBox Content="Truncate Table before execution" IsChecked="{Binding Model.SelectedExecutionItem.TruncateBeforeExecution, Mode=TwoWay}" IsEnabled="False" />
            </StackPanel>
        </GroupBox>

        <GroupBox Grid.Column="2" Header="Commands">
            <StackPanel>
                <Button Content="Show generation Preview" 
                        Command="{Binding ShowPreviewCommand, Mode=OneWay}" 
                        CommandParameter="{Binding Model.SelectedExecutionItem, Mode=TwoWay}" />

                <Button Content="Truncate Target Table now!" 
                        Command="{Binding TruncateTableNowCommand, Mode=OneWay}" 
                        CommandParameter="{Binding Model.SelectedExecutionItem, Mode=TwoWay}"
                        IsEnabled="False"/>
                <Button Content="Show table current content" 
                        Command="{Binding ShowTableContentsPreviewCommand, Mode=OneWay}" 
                        CommandParameter="{Binding Model.SelectedExecutionItem, Mode=TwoWay}"
                        IsEnabled="False"/>
                
            </StackPanel>
        </GroupBox>
    </Grid>
</UserControl>
