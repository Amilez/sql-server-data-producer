<!-- Copyright 2012-2013 Peter Henell

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http:www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.-->
    
    <UserControl x:Class="SQLDataProducer.Views.ExecutionsOptionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:conv="clr-namespace:SQLDataProducer.Converters"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:enums="clr-namespace:SQLDataProducer.Entities;assembly=SQLDataProducer.Entities"
             >

            <UserControl.Resources>
                <ObjectDataProvider x:Key="executionTypeEnum"
                MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="enums:ExecutionTypes"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                <ObjectDataProvider x:Key="numberGeneratorMethodsEnum"
                MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="enums:NumberGeneratorMethods"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>

                <BooleanToVisibilityConverter x:Key="visiConv" />

                <conv:InverseBooleanConverter x:Key="inverseBoolConvrt" />
            </UserControl.Resources>

    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="180" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0" Grid.Row="0">
            <GroupBox Header="Select execution type"  IsEnabled="{Binding Model.IsExecutionIdle}">
                <StackPanel>
                    <ComboBox 
                    ItemsSource="{Binding Source={StaticResource executionTypeEnum}}" 
                    SelectedItem="{Binding Path=Model.Options.ExecutionType, Mode=TwoWay}" />

                    <GroupBox Header="Time based execution:">
                        <GroupBox.Style>
                            <Style>
                                <Setter Property="GroupBox.Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Model.Options.ExecutionType}" Value="DurationBased" >
                                        <Setter Property="GroupBox.Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </GroupBox.Style>

                        <StackPanel>
                            <Label Content="Seconds to run:" />
                            <TextBox Margin="3 3 3 3" Text="{Binding Path=Model.Options.SecondsToRun, Mode=TwoWay}" />
                            <Label Content="Number of threads:" />
                            <TextBox Margin="3 3 3 3" Text="{Binding Path=Model.Options.MaxThreads}" />
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="Execution Count:">
                        <GroupBox.Style>
                            <Style>
                                <Setter Property="GroupBox.Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Model.Options.ExecutionType}" Value="ExecutionCountBased" >
                                        <Setter Property="GroupBox.Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </GroupBox.Style>
                        <StackPanel>
                            <Label Content="Number of executions:" />
                            <TextBox Margin="3 3 3 3" Text="{Binding Path=Model.Options.FixedExecutions, Mode=TwoWay}" />
                            <Label Content="Number of threads:" />
                            <TextBox Margin="3 3 3 3" Text="{Binding Path=Model.Options.MaxThreads}" />
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Options" IsEnabled="{Binding Model.IsExecutionIdle}" Margin="0 5 0 5">
                <StackPanel>
                    <CheckBox Content="Do not execute, save in script:" IsChecked="{Binding Model.Options.OnlyOutputToFile, Mode=TwoWay}"  Margin="0 2 0 2" />
                    <TextBox Text="{Binding Model.Options.ScriptOutputScriptName, Mode=TwoWay}"  Margin="0 2 0 2" />
                    <ComboBox SelectedItem="{Binding Model.Options.NumberGeneratorMethod, Mode=TwoWay}"  Margin="0 2 0 2" 
                          ItemsSource="{Binding Source={StaticResource numberGeneratorMethodsEnum}}" />
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Global Generator Options"  Margin="0 5 0 5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <!--
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="20"/>-->
                    </Grid.RowDefinitions>
                    
                    <Grid.ColumnDefinitions>
                        <!--<ColumnDefinition Width="Auto"/>-->
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Start Date for DateTime generators" Grid.Column="0" Grid.Row="0" Margin="2 2 2 2" />
                    <!--<DatePickerTextBox Text="{Binding Model.Options.DateTimeGenerationStartTime, Mode=TwoWay}" Grid.Column="1" Grid.Row="0"  />-->
                    <DatePicker Grid.Column="0" Grid.Row="1" Margin="2 2 2 2"
                                DisplayDate="{Binding Model.Options.DateTimeGenerationStartTime, Mode=TwoWay}" 
                                SelectedDate="{Binding Model.Options.DateTimeGenerationStartTime, Mode=TwoWay}"/>

                    <!--<TextBlock Text="Start Number for Integer generators" Grid.Column="0" Grid.Row="1" Margin="2 2 2 2" />
                    <TextBox Text="{Binding Model.Options.StartValue, Mode=TwoWay}" IsEnabled="False" Grid.Column="1" Grid.Row="1" Margin="2 2 2 2"  />-->

                </Grid>
            </GroupBox>


            <!--<GroupBox Header="Run"  >
                <Button Content="Run Now" Height="50" />
            </GroupBox>-->

        </StackPanel>
        <StackPanel Grid.Column="1">
            <GroupBox Header="Warning summary">
                <ListBox ItemsSource="{Binding Model.ExecutionItemsWithWarningsView}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                
                                <TextBlock Text="{Binding TargetTable}" Grid.Column="0"/>
                                <ListBox ItemsSource="{Binding TargetTable.Columns}" Grid.Column="1" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding WarningText}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </GroupBox>
        </StackPanel>
    </Grid>
</UserControl>
