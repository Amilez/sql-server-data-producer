<!-- Copyright 2012 Peter Henell

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http:www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.-->
    
<UserControl x:Class="SQLDataProducer.Views.ExecutionDetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:me="clr-namespace:SQLDataProducer.ViewModels"
           
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:enums="clr-namespace:SQLDataProducer.Entities;assembly=SQLDataProducer.Entities"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             >
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="visiConv" />
        
        <ObjectDataProvider x:Key="executionConditionEnum"
                MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:ExecutionConditions"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        
    </UserControl.Resources>
    
    
    <Grid IsEnabled="{Binding HaveExecutionItemSelected}">
        <Grid.RowDefinitions>
            <RowDefinition Height="100" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="25*" />
            <ColumnDefinition Width="25*" />
            <ColumnDefinition Width="50*" />
        </Grid.ColumnDefinitions>
        
            <GroupBox Grid.Row="0" Grid.Column="0">
                <StackPanel>
                    <Label Content="Execution Item Description:" FontSize="11" />
                    <TextBox Text="{Binding SelectedExecutionItem.Description, Mode=TwoWay}" />

                    <Label Content="Number of insertions for this item:" FontSize="11" />
                    <TextBox Text="{Binding SelectedExecutionItem.RepeatCount, Mode=TwoWay}" />

                </StackPanel>
                                
            </GroupBox>
        <GroupBox Header="Options" Grid.Column="1">
            <StackPanel>
                <!--<CheckBox Content="Truncate Table before execution" IsChecked="{Binding SelectedExecutionItem.TruncateBeforeExecution, Mode=TwoWay}" />-->
                <GroupBox Header="Conditional Insert?">
                    <StackPanel>
                        <ComboBox ItemsSource="{Binding Source={StaticResource executionConditionEnum}}"
                            SelectedItem="{Binding SelectedExecutionItem.ExecutionCondition, Mode=TwoWay}" />
                        <TextBox Text="{Binding SelectedExecutionItem.ExecutionConditionValue, Mode= TwoWay}" />
                    </StackPanel>
                </GroupBox>
                
            </StackPanel>
        </GroupBox>

        <GroupBox Grid.Row="1" Grid.ColumnSpan="3">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*" />
                    <ColumnDefinition Width="50*" />
                </Grid.ColumnDefinitions>


                <DataGrid ItemsSource="{Binding Path=SelectedExecutionItem.TargetTable.Columns, Mode=OneWay}" 
                            Grid.Row="0" 
                            Grid.RowSpan="2" 
                            AutoGenerateColumns="false" 
                            IsReadOnly="True" 
                            SelectionUnit="FullRow"
                            SelectedItem="{Binding SelectedColumn, Mode=TwoWay}"
                            Style="{DynamicResource ResourceKey=DataGridDemoStyle}"
                          >
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding ColumnName}" Header="Column Name" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding ColumnDataType}" Header="Data Type" IsReadOnly="True" />
                        <DataGridCheckBoxColumn IsReadOnly="True" Binding="{Binding ColumnDataType.IsNullable}" Header="Nullable?" />
                        <DataGridTemplateColumn Header="Data Generator">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Visibility="{Binding Path=IsNotIdentity,ConverterParameter=IsNotIdentity, Converter={StaticResource ResourceKey=visiConv}}" 
                                           Text="{Binding Generator.GeneratorName}" Height="25" />
                                        <TextBlock Visibility="{Binding Path=IsIdentity,ConverterParameter=IsIdentity, Converter={StaticResource ResourceKey=visiConv}}" 
                                           Text="Identity" Height="25" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Binding="{Binding Generator.GeneratorParameters.NiceString}" 
                                            Header="Parameters" IsReadOnly="True"/>

                    </DataGrid.Columns>
                </DataGrid>
                <GroupBox Header="Select Generator" Grid.Column="1" Grid.Row="0">
                    <ComboBox  
                    ItemsSource="{Binding SelectedColumn.PossibleGenerators}"
                    SelectedItem="{Binding SelectedColumn.Generator, Mode=TwoWay}"
                    IsEnabled="{Binding Path=SelectedColumn.IsNotIdentity}"
                    Height="25" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding GeneratorName}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </GroupBox>

                <GroupBox Header="Configure the Parameters for the Generator" Grid.Column="1" Grid.Row="1">
                    <ListBox
                        ItemsSource="{Binding Path=SelectedColumn.Generator.GeneratorParameters}" 
                        IsEnabled="{Binding Path=SelectedColumn.IsNotIdentity}"  VerticalAlignment="Stretch">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Visibility="{Binding IsWriteEnabled, Converter={StaticResource ResourceKey=visiConv}}"
                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="150" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding ParameterName}" Grid.Column="0" />
                                    <TextBox Text="{Binding Value}"  Grid.Column="1" MinWidth="150"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </GroupBox>
            </Grid>
        </GroupBox>

    </Grid>

</UserControl>
